
const FunctionalKeygen = styled.keygen`
    accelerator: ${props => props.accelerator};
    align-content: ${props => props.alignContent};
    align-items: ${props => props.alignItems};
    align-self: ${props => props.alignSelf};
    alignment-baseline: ${props => props.alignmentBaseline};
    alt: ${props => props.alt};
    animation-delay: ${props => props.animationDelay};
    animation-direction: ${props => props.animationDirection};
    animation-duration: ${props => props.animationDuration};
    animation-fill-mode: ${props => props.animationFillMode};
    animation-iteration-count: ${props => props.animationIterationCount};
    animation-name: ${props => props.animationName};
    animation-play-state: ${props => props.animationPlayState};
    animation-timing-function: ${props => props.animationTimingFunction};
    backface-visibility: ${props => props.backfaceVisibility};
    background-attachment: ${props => props.backgroundAttachment};
    background-blend-mode: ${props => props.backgroundBlendMode};
    background-clip: ${props => props.backgroundClip};
    background-color: ${props => props.backgroundColor};
    background-image: ${props => props.backgroundImage};
    background-origin: ${props => props.backgroundOrigin};
    background-position: ${props => props.backgroundPosition};
    background-position-x: ${props => props.backgroundPositionX};
    background-position-y: ${props => props.backgroundPositionY};
    background-repeat: ${props => props.backgroundRepeat};
    background-size: ${props => props.backgroundSize};
    baseline-shift: ${props => props.baselineShift};
    border-bottom-color: ${props => props.borderBottomColor};
    border-bottom-left-radius: ${props => props.borderBottomLeftRadius};
    border-bottom-right-radius: ${props => props.borderBottomRightRadius};
    border-bottom-style: ${props => props.borderBottomStyle};
    border-bottom-width: ${props => props.borderBottomWidth};
    border-collapse: ${props => props.borderCollapse};
    border-image-outset: ${props => props.borderImageOutset};
    border-image-repeat: ${props => props.borderImageRepeat};
    border-image-slice: ${props => props.borderImageSlice};
    border-image-source: ${props => props.borderImageSource};
    border-image-width: ${props => props.borderImageWidth};
    border-left-color: ${props => props.borderLeftColor};
    border-left-style: ${props => props.borderLeftStyle};
    border-left-width: ${props => props.borderLeftWidth};
    border-right-color: ${props => props.borderRightColor};
    border-right-style: ${props => props.borderRightStyle};
    border-right-width: ${props => props.borderRightWidth};
    border-spacing: ${props => props.borderSpacing};
    border-top-color: ${props => props.borderTopColor};
    border-top-left-radius: ${props => props.borderTopLeftRadius};
    border-top-right-radius: ${props => props.borderTopRightRadius};
    border-top-style: ${props => props.borderTopStyle};
    border-top-width: ${props => props.borderTopWidth};
    bottom: ${props => props.bottom};
    box-decoration-break: ${props => props.boxDecorationBreak};
    box-shadow: ${props => props.boxShadow};
    box-sizing: ${props => props.boxSizing};
    break-after: ${props => props.breakAfter};
    break-before: ${props => props.breakBefore};
    break-inside: ${props => props.breakInside};
    buffered-rendering: ${props => props.bufferedRendering};
    caption-side: ${props => props.captionSide};
    clear: ${props => props.clear};
    clip: ${props => props.clip};
    clip-path: ${props => props.clipPath};
    clip-rule: ${props => props.clipRule};
    color: ${props => props.color};
    color-interpolation: ${props => props.colorInterpolation};
    color-interpolation-filters: ${props => props.colorInterpolationFilters};
    color-rendering: ${props => props.colorRendering};
    column-count: ${props => props.columnCount};
    column-fill: ${props => props.columnFill};
    column-gap: ${props => props.columnGap};
    column-progression: ${props => props.columnProgression};
    column-rule-color: ${props => props.columnRuleColor};
    column-rule-style: ${props => props.columnRuleStyle};
    column-rule-width: ${props => props.columnRuleWidth};
    column-span: ${props => props.columnSpan};
    column-width: ${props => props.columnWidth};
    content: ${props => props.content};
    counter-increment: ${props => props.counterIncrement};
    counter-reset: ${props => props.counterReset};
    cursor: ${props => props.cursor};
    cx: ${props => props.cx};
    cy: ${props => props.cy};
    d: ${props => props.d};
    direction: ${props => props.direction};
    display: ${props => props.display};
    dominant-baseline: ${props => props.dominantBaseline};
    empty-cells: ${props => props.emptyCells};
    enable-background: ${props => props.enableBackground};
    fill: ${props => props.fill};
    fill-opacity: ${props => props.fillOpacity};
    fill-rule: ${props => props.fillRule};
    filter: ${props => props.filter};
    flex-basis: ${props => props.flexBasis};
    flex-direction: ${props => props.flexDirection};
    flex-grow: ${props => props.flexGrow};
    flex-shrink: ${props => props.flexShrink};
    flex-wrap: ${props => props.flexWrap};
    float: ${props => props.float};
    flood-color: ${props => props.floodColor};
    flood-opacity: ${props => props.floodOpacity};
    font-family: ${props => props.fontFamily};
    font-feature-settings: ${props => props.fontFeatureSettings};
    font-kerning: ${props => props.fontKerning};
    font-language-override: ${props => props.fontLanguageOverride};
    font-size: ${props => props.fontSize};
    font-size-adjust: ${props => props.fontSizeAdjust};
    font-stretch: ${props => props.fontStretch};
    font-style: ${props => props.fontStyle};
    font-synthesis: ${props => props.fontSynthesis};
    font-variant: ${props => props.fontVariant};
    font-variant-alternates: ${props => props.fontVariantAlternates};
    font-variant-caps: ${props => props.fontVariantCaps};
    font-variant-east-asian: ${props => props.fontVariantEastAsian};
    font-variant-ligatures: ${props => props.fontVariantLigatures};
    font-variant-numeric: ${props => props.fontVariantNumeric};
    font-variant-position: ${props => props.fontVariantPosition};
    font-weight: ${props => props.fontWeight};
    glyph-orientation-horizontal: ${props => props.glyphOrientationHorizontal};
    glyph-orientation-vertical: ${props => props.glyphOrientationVertical};
    height: ${props => props.height};
    hyphens: ${props => props.hyphens};
    image-orientation: ${props => props.imageOrientation};
    image-rendering: ${props => props.imageRendering};
    ime-mode: ${props => props.imeMode};
    isolation: ${props => props.isolation};
    justify-content: ${props => props.justifyContent};
    justify-items: ${props => props.justifyItems};
    justify-self: ${props => props.justifySelf};
    kerning: ${props => props.kerning};
    layout-grid-char: ${props => props.layoutGridChar};
    layout-grid-line: ${props => props.layoutGridLine};
    layout-grid-mode: ${props => props.layoutGridMode};
    layout-grid-type: ${props => props.layoutGridType};
    left: ${props => props.left};
    letter-spacing: ${props => props.letterSpacing};
    lighting-color: ${props => props.lightingColor};
    line-break: ${props => props.lineBreak};
    line-height: ${props => props.lineHeight};
    list-style-image: ${props => props.listStyleImage};
    list-style-position: ${props => props.listStylePosition};
    list-style-type: ${props => props.listStyleType};
    margin-bottom: ${props => props.marginBottom};
    margin-left: ${props => props.marginLeft};
    margin-right: ${props => props.marginRight};
    margin-top: ${props => props.marginTop};
    marker: ${props => props.marker};
    marker-end: ${props => props.markerEnd};
    marker-mid: ${props => props.markerMid};
    marker-offset: ${props => props.markerOffset};
    marker-start: ${props => props.markerStart};
    mask: ${props => props.mask};
    mask-type: ${props => props.maskType};
    max-height: ${props => props.maxHeight};
    max-width: ${props => props.maxWidth};
    min-height: ${props => props.minHeight};
    min-width: ${props => props.minWidth};
    mix-blend-mode: ${props => props.mixBlendMode};
    motion-offset: ${props => props.motionOffset};
    motion-path: ${props => props.motionPath};
    motion-rotation: ${props => props.motionRotation};
    object-fit: ${props => props.objectFit};
    object-position: ${props => props.objectPosition};
    opacity: ${props => props.opacity};
    order: ${props => props.order};
    orphans: ${props => props.orphans};
    outline-color: ${props => props.outlineColor};
    outline-offset: ${props => props.outlineOffset};
    outline-style: ${props => props.outlineStyle};
    outline-width: ${props => props.outlineWidth};
    overflow: ${props => props.overflow};
    overflow-wrap: ${props => props.overflowWrap};
    overflow-x: ${props => props.overflowX};
    overflow-y: ${props => props.overflowY};
    padding-bottom: ${props => props.paddingBottom};
    padding-left: ${props => props.paddingLeft};
    padding-right: ${props => props.paddingRight};
    padding-top: ${props => props.paddingTop};
    page-break-after: ${props => props.pageBreakAfter};
    page-break-before: ${props => props.pageBreakBefore};
    page-break-inside: ${props => props.pageBreakInside};
    paint-order: ${props => props.paintOrder};
    perspective: ${props => props.perspective};
    perspective-origin: ${props => props.perspectiveOrigin};
    pointer-events: ${props => props.pointerEvents};
    position: ${props => props.position};
    quotes: ${props => props.quotes};
    r: ${props => props.r};
    resize: ${props => props.resize};
    right: ${props => props.right};
    ruby-align: ${props => props.rubyAlign};
    ruby-overhang: ${props => props.rubyOverhang};
    ruby-position: ${props => props.rubyPosition};
    rx: ${props => props.rx};
    ry: ${props => props.ry};
    scroll-behavior: ${props => props.scrollBehavior};
    scroll-snap-coordinate: ${props => props.scrollSnapCoordinate};
    scroll-snap-destination: ${props => props.scrollSnapDestination};
    scroll-snap-points-x: ${props => props.scrollSnapPointsX};
    scroll-snap-points-y: ${props => props.scrollSnapPointsY};
    scroll-snap-type-x: ${props => props.scrollSnapTypeX};
    scroll-snap-type-y: ${props => props.scrollSnapTypeY};
    shape-image-threshold: ${props => props.shapeImageThreshold};
    shape-margin: ${props => props.shapeMargin};
    shape-outside: ${props => props.shapeOutside};
    shape-rendering: ${props => props.shapeRendering};
    speak: ${props => props.speak};
    stop-color: ${props => props.stopColor};
    stop-opacity: ${props => props.stopOpacity};
    stroke: ${props => props.stroke};
    stroke-dasharray: ${props => props.strokeDasharray};
    stroke-dashoffset: ${props => props.strokeDashoffset};
    stroke-linecap: ${props => props.strokeLinecap};
    stroke-linejoin: ${props => props.strokeLinejoin};
    stroke-miterlimit: ${props => props.strokeMiterlimit};
    stroke-opacity: ${props => props.strokeOpacity};
    stroke-width: ${props => props.strokeWidth};
    tab-size: ${props => props.tabSize};
    table-layout: ${props => props.tableLayout};
    text-align: ${props => props.textAlign};
    text-align-last: ${props => props.textAlignLast};
    text-anchor: ${props => props.textAnchor};
    text-autospace: ${props => props.textAutospace};
    text-decoration: ${props => props.textDecoration};
    text-decoration-color: ${props => props.textDecorationColor};
    text-decoration-line: ${props => props.textDecorationLine};
    text-decoration-style: ${props => props.textDecorationStyle};
    text-emphasis-color: ${props => props.textEmphasisColor};
    text-emphasis-position: ${props => props.textEmphasisPosition};
    text-emphasis-style: ${props => props.textEmphasisStyle};
    text-indent: ${props => props.textIndent};
    text-justify: ${props => props.textJustify};
    text-justify-trim: ${props => props.textJustifyTrim};
    text-kashida: ${props => props.textKashida};
    text-kashida-space: ${props => props.textKashidaSpace};
    text-orientation: ${props => props.textOrientation};
    text-overflow: ${props => props.textOverflow};
    text-rendering: ${props => props.textRendering};
    text-shadow: ${props => props.textShadow};
    text-size-adjust: ${props => props.textSizeAdjust};
    text-transform: ${props => props.textTransform};
    text-underline-position: ${props => props.textUnderlinePosition};
    top: ${props => props.top};
    touch-action: ${props => props.touchAction};
    transform: ${props => props.transform};
    transform-origin: ${props => props.transformOrigin};
    transform-style: ${props => props.transformStyle};
    transition-delay: ${props => props.transitionDelay};
    transition-duration: ${props => props.transitionDuration};
    transition-property: ${props => props.transitionProperty};
    transition-timing-function: ${props => props.transitionTimingFunction};
    unicode-bidi: ${props => props.unicodeBidi};
    vector-effect: ${props => props.vectorEffect};
    vertical-align: ${props => props.verticalAlign};
    visibility: ${props => props.visibility};
    white-space: ${props => props.whiteSpace};
    widows: ${props => props.widows};
    width: ${props => props.width};
    will-change: ${props => props.willChange};
    word-break: ${props => props.wordBreak};
    word-spacing: ${props => props.wordSpacing};
    word-wrap: ${props => props.wordWrap};
    writing-mode: ${props => props.writingMode};
    x: ${props => props.x};
    y: ${props => props.y};
    z-index: ${props => props.zIndex};
    zoom: ${props => props.zoom};
`

const Keygen = props => {
    return (
        <FunctionalKeygen { ...props }>
            {props.children}
        </FunctionalKeygen>
    )
}

export default Keygen;
  