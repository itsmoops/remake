const styleProps = `
    accelerator: ${props => props.accelerator};
    -wap-accesskey: ${props => props.wapAccesskey};
    align-content: ${props => props.alignContent};
    -webkit-align-content: ${props => props.webkitAlignContent};
    align-items: ${props => props.alignItems};
    -webkit-align-items: ${props => props.webkitAlignItems};
    align-self: ${props => props.alignSelf};
    -webkit-align-self: ${props => props.webkitAlignSelf};
    alignment-baseline: ${props => props.alignmentBaseline};
    all: ${props => props.all};
    alt: ${props => props.alt};
    -webkit-alt: ${props => props.webkitAlt};
    animation: ${props => props.animation};
    animation-delay: ${props => props.animationDelay};
    -moz-animation-delay: ${props => props.mozAnimationDelay};
    -ms-animation-delay: ${props => props.msAnimationDelay};
    -webkit-animation-delay: ${props => props.webkitAnimationDelay};
    animation-direction: ${props => props.animationDirection};
    -moz-animation-direction: ${props => props.mozAnimationDirection};
    -ms-animation-direction: ${props => props.msAnimationDirection};
    -webkit-animation-direction: ${props => props.webkitAnimationDirection};
    animation-duration: ${props => props.animationDuration};
    -moz-animation-duration: ${props => props.mozAnimationDuration};
    -ms-animation-duration: ${props => props.msAnimationDuration};
    -webkit-animation-duration: ${props => props.webkitAnimationDuration};
    animation-fill-mode: ${props => props.animationFillMode};
    -moz-animation-fill-mode: ${props => props.mozAnimationFillMode};
    -ms-animation-fill-mode: ${props => props.msAnimationFillMode};
    -webkit-animation-fill-mode: ${props => props.webkitAnimationFillMode};
    animation-iteration-count: ${props => props.animationIterationCount};
    -moz-animation-iteration-count: ${props => props.mozAnimationIterationCount};
    -ms-animation-iteration-count: ${props => props.msAnimationIterationCount};
    -webkit-animation-iteration-count: ${props => props.webkitAnimationIterationCount};
    -moz-animation: ${props => props.mozAnimation};
    -ms-animation: ${props => props.msAnimation};
    animation-name: ${props => props.animationName};
    -moz-animation-name: ${props => props.mozAnimationName};
    -ms-animation-name: ${props => props.msAnimationName};
    -webkit-animation-name: ${props => props.webkitAnimationName};
    animation-play-state: ${props => props.animationPlayState};
    -moz-animation-play-state: ${props => props.mozAnimationPlayState};
    -ms-animation-play-state: ${props => props.msAnimationPlayState};
    -webkit-animation-play-state: ${props => props.webkitAnimationPlayState};
    animation-timing-function: ${props => props.animationTimingFunction};
    -moz-animation-timing-function: ${props => props.mozAnimationTimingFunction};
    -ms-animation-timing-function: ${props => props.msAnimationTimingFunction};
    -webkit-animation-timing-function: ${props => props.webkitAnimationTimingFunction};
    -webkit-animation: ${props => props.webkitAnimation};
    -webkit-app-region: ${props => props.webkitAppRegion};
    appearance: ${props => props.appearance};
    -moz-appearance: ${props => props.mozAppearance};
    -webkit-appearance: ${props => props.webkitAppearance};
    -webkit-aspect-ratio: ${props => props.webkitAspectRatio};
    audio-level: ${props => props.audioLevel};
    azimuth: ${props => props.azimuth};
    backdrop-filter: ${props => props.backdropFilter};
    -webkit-backdrop-filter: ${props => props.webkitBackdropFilter};
    backface-visibility: ${props => props.backfaceVisibility};
    -moz-backface-visibility: ${props => props.mozBackfaceVisibility};
    -ms-backface-visibility: ${props => props.msBackfaceVisibility};
    -webkit-backface-visibility: ${props => props.webkitBackfaceVisibility};
    background: ${props => props.background};
    background-attachment: ${props => props.backgroundAttachment};
    -webkit-background-attachment: ${props => props.webkitBackgroundAttachment};
    background-blend-mode: ${props => props.backgroundBlendMode};
    background-clip: ${props => props.backgroundClip};
    -moz-background-clip: ${props => props.mozBackgroundClip};
    -webkit-background-clip: ${props => props.webkitBackgroundClip};
    background-color: ${props => props.backgroundColor};
    -webkit-background-color: ${props => props.webkitBackgroundColor};
    -webkit-background-composite: ${props => props.webkitBackgroundComposite};
    background-image: ${props => props.backgroundImage};
    background-image-transform: ${props => props.backgroundImageTransform};
    -webkit-background-image: ${props => props.webkitBackgroundImage};
    -moz-background-inline-policy: ${props => props.mozBackgroundInlinePolicy};
    background-origin: ${props => props.backgroundOrigin};
    -moz-background-origin: ${props => props.mozBackgroundOrigin};
    -webkit-background-origin: ${props => props.webkitBackgroundOrigin};
    background-position: ${props => props.backgroundPosition};
    -webkit-background-position: ${props => props.webkitBackgroundPosition};
    background-position-x: ${props => props.backgroundPositionX};
    -webkit-background-position-x: ${props => props.webkitBackgroundPositionX};
    background-position-y: ${props => props.backgroundPositionY};
    -webkit-background-position-y: ${props => props.webkitBackgroundPositionY};
    background-repeat: ${props => props.backgroundRepeat};
    -webkit-background-repeat: ${props => props.webkitBackgroundRepeat};
    background-repeat-x: ${props => props.backgroundRepeatX};
    background-repeat-y: ${props => props.backgroundRepeatY};
    background-size: ${props => props.backgroundSize};
    -moz-background-size: ${props => props.mozBackgroundSize};
    -webkit-background-size: ${props => props.webkitBackgroundSize};
    -webkit-background: ${props => props.webkitBackground};
    baseline-shift: ${props => props.baselineShift};
    behavior: ${props => props.behavior};
    -moz-binding: ${props => props.mozBinding};
    -ms-block-progression: ${props => props.msBlockProgression};
    block-size: ${props => props.blockSize};
    block-step: ${props => props.blockStep};
    block-step-align: ${props => props.blockStepAlign};
    block-step-insert: ${props => props.blockStepInsert};
    block-step-round: ${props => props.blockStepRound};
    block-step-size: ${props => props.blockStepSize};
    bookmark-label: ${props => props.bookmarkLabel};
    bookmark-level: ${props => props.bookmarkLevel};
    bookmark-state: ${props => props.bookmarkState};
    border: ${props => props.border};
    -webkit-border-after-color: ${props => props.webkitBorderAfterColor};
    -webkit-border-after-style: ${props => props.webkitBorderAfterStyle};
    -webkit-border-after: ${props => props.webkitBorderAfter};
    -webkit-border-after-width: ${props => props.webkitBorderAfterWidth};
    -webkit-border-before-color: ${props => props.webkitBorderBeforeColor};
    -webkit-border-before-style: ${props => props.webkitBorderBeforeStyle};
    -webkit-border-before: ${props => props.webkitBorderBefore};
    -webkit-border-before-width: ${props => props.webkitBorderBeforeWidth};
    border-block: ${props => props.borderBlock};
    border-block-color: ${props => props.borderBlockColor};
    border-block-end: ${props => props.borderBlockEnd};
    border-block-end-color: ${props => props.borderBlockEndColor};
    border-block-end-style: ${props => props.borderBlockEndStyle};
    border-block-end-width: ${props => props.borderBlockEndWidth};
    border-block-start: ${props => props.borderBlockStart};
    border-block-start-color: ${props => props.borderBlockStartColor};
    border-block-start-style: ${props => props.borderBlockStartStyle};
    border-block-start-width: ${props => props.borderBlockStartWidth};
    border-block-style: ${props => props.borderBlockStyle};
    border-block-width: ${props => props.borderBlockWidth};
    border-bottom: ${props => props.borderBottom};
    border-bottom-color: ${props => props.borderBottomColor};
    -moz-border-bottom-colors: ${props => props.mozBorderBottomColors};
    border-bottom-left-radius: ${props => props.borderBottomLeftRadius};
    -webkit-border-bottom-left-radius: ${props => props.webkitBorderBottomLeftRadius};
    border-bottom-right-radius: ${props => props.borderBottomRightRadius};
    -webkit-border-bottom-right-radius: ${props => props.webkitBorderBottomRightRadius};
    border-bottom-style: ${props => props.borderBottomStyle};
    border-bottom-width: ${props => props.borderBottomWidth};
    border-boundary: ${props => props.borderBoundary};
    border-collapse: ${props => props.borderCollapse};
    border-color: ${props => props.borderColor};
    -moz-border-end-color: ${props => props.mozBorderEndColor};
    -webkit-border-end-color: ${props => props.webkitBorderEndColor};
    -moz-border-end: ${props => props.mozBorderEnd};
    -moz-border-end-style: ${props => props.mozBorderEndStyle};
    -webkit-border-end-style: ${props => props.webkitBorderEndStyle};
    -webkit-border-end: ${props => props.webkitBorderEnd};
    -moz-border-end-width: ${props => props.mozBorderEndWidth};
    -webkit-border-end-width: ${props => props.webkitBorderEndWidth};
    -webkit-border-fit: ${props => props.webkitBorderFit};
    -webkit-border-horizontal-spacing: ${props => props.webkitBorderHorizontalSpacing};
    border-image: ${props => props.borderImage};
    -moz-border-image: ${props => props.mozBorderImage};
    -o-border-image: ${props => props.oBorderImage};
    border-image-outset: ${props => props.borderImageOutset};
    -webkit-border-image-outset: ${props => props.webkitBorderImageOutset};
    border-image-repeat: ${props => props.borderImageRepeat};
    -webkit-border-image-repeat: ${props => props.webkitBorderImageRepeat};
    border-image-slice: ${props => props.borderImageSlice};
    -webkit-border-image-slice: ${props => props.webkitBorderImageSlice};
    border-image-source: ${props => props.borderImageSource};
    -webkit-border-image-source: ${props => props.webkitBorderImageSource};
    border-image-transform: ${props => props.borderImageTransform};
    -webkit-border-image: ${props => props.webkitBorderImage};
    border-image-width: ${props => props.borderImageWidth};
    -webkit-border-image-width: ${props => props.webkitBorderImageWidth};
    border-inline: ${props => props.borderInline};
    border-inline-color: ${props => props.borderInlineColor};
    border-inline-end: ${props => props.borderInlineEnd};
    border-inline-end-color: ${props => props.borderInlineEndColor};
    border-inline-end-style: ${props => props.borderInlineEndStyle};
    border-inline-end-width: ${props => props.borderInlineEndWidth};
    border-inline-start: ${props => props.borderInlineStart};
    border-inline-start-color: ${props => props.borderInlineStartColor};
    border-inline-start-style: ${props => props.borderInlineStartStyle};
    border-inline-start-width: ${props => props.borderInlineStartWidth};
    border-inline-style: ${props => props.borderInlineStyle};
    border-inline-width: ${props => props.borderInlineWidth};
    border-left: ${props => props.borderLeft};
    border-left-color: ${props => props.borderLeftColor};
    -moz-border-left-colors: ${props => props.mozBorderLeftColors};
    border-left-style: ${props => props.borderLeftStyle};
    border-left-width: ${props => props.borderLeftWidth};
    border-radius: ${props => props.borderRadius};
    -moz-border-radius-bottomleft: ${props => props.mozBorderRadiusBottomleft};
    -moz-border-radius-bottomright: ${props => props.mozBorderRadiusBottomright};
    -moz-border-radius: ${props => props.mozBorderRadius};
    -moz-border-radius-topleft: ${props => props.mozBorderRadiusTopleft};
    -moz-border-radius-topright: ${props => props.mozBorderRadiusTopright};
    -webkit-border-radius: ${props => props.webkitBorderRadius};
    border-right: ${props => props.borderRight};
    border-right-color: ${props => props.borderRightColor};
    -moz-border-right-colors: ${props => props.mozBorderRightColors};
    border-right-style: ${props => props.borderRightStyle};
    border-right-width: ${props => props.borderRightWidth};
    border-spacing: ${props => props.borderSpacing};
    -moz-border-start-color: ${props => props.mozBorderStartColor};
    -webkit-border-start-color: ${props => props.webkitBorderStartColor};
    -moz-border-start: ${props => props.mozBorderStart};
    -moz-border-start-style: ${props => props.mozBorderStartStyle};
    -webkit-border-start-style: ${props => props.webkitBorderStartStyle};
    -webkit-border-start: ${props => props.webkitBorderStart};
    -moz-border-start-width: ${props => props.mozBorderStartWidth};
    -webkit-border-start-width: ${props => props.webkitBorderStartWidth};
    border-style: ${props => props.borderStyle};
    border-top: ${props => props.borderTop};
    border-top-color: ${props => props.borderTopColor};
    -moz-border-top-colors: ${props => props.mozBorderTopColors};
    border-top-left-radius: ${props => props.borderTopLeftRadius};
    -webkit-border-top-left-radius: ${props => props.webkitBorderTopLeftRadius};
    border-top-right-radius: ${props => props.borderTopRightRadius};
    -webkit-border-top-right-radius: ${props => props.webkitBorderTopRightRadius};
    border-top-style: ${props => props.borderTopStyle};
    border-top-width: ${props => props.borderTopWidth};
    -webkit-border-vertical-spacing: ${props => props.webkitBorderVerticalSpacing};
    border-width: ${props => props.borderWidth};
    bottom: ${props => props.bottom};
    -moz-box-align: ${props => props.mozBoxAlign};
    -webkit-box-align: ${props => props.webkitBoxAlign};
    box-decoration-break: ${props => props.boxDecorationBreak};
    -webkit-box-decoration-break: ${props => props.webkitBoxDecorationBreak};
    -moz-box-direction: ${props => props.mozBoxDirection};
    -webkit-box-direction: ${props => props.webkitBoxDirection};
    -webkit-box-flex-group: ${props => props.webkitBoxFlexGroup};
    -moz-box-flex: ${props => props.mozBoxFlex};
    -webkit-box-flex: ${props => props.webkitBoxFlex};
    -webkit-box-lines: ${props => props.webkitBoxLines};
    -moz-box-ordinal-group: ${props => props.mozBoxOrdinalGroup};
    -webkit-box-ordinal-group: ${props => props.webkitBoxOrdinalGroup};
    -moz-box-orient: ${props => props.mozBoxOrient};
    -webkit-box-orient: ${props => props.webkitBoxOrient};
    -moz-box-pack: ${props => props.mozBoxPack};
    -webkit-box-pack: ${props => props.webkitBoxPack};
    -webkit-box-reflect: ${props => props.webkitBoxReflect};
    box-shadow: ${props => props.boxShadow};
    -moz-box-shadow: ${props => props.mozBoxShadow};
    -webkit-box-shadow: ${props => props.webkitBoxShadow};
    box-sizing: ${props => props.boxSizing};
    -moz-box-sizing: ${props => props.mozBoxSizing};
    -webkit-box-sizing: ${props => props.webkitBoxSizing};
    box-snap: ${props => props.boxSnap};
    break-after: ${props => props.breakAfter};
    break-before: ${props => props.breakBefore};
    break-inside: ${props => props.breakInside};
    buffered-rendering: ${props => props.bufferedRendering};
    caption-side: ${props => props.captionSide};
    caret: ${props => props.caret};
    caret-animation: ${props => props.caretAnimation};
    caret-color: ${props => props.caretColor};
    caret-shape: ${props => props.caretShape};
    chains: ${props => props.chains};
    clear: ${props => props.clear};
    clip: ${props => props.clip};
    clip-path: ${props => props.clipPath};
    -webkit-clip-path: ${props => props.webkitClipPath};
    clip-rule: ${props => props.clipRule};
    color: ${props => props.color};
    color-adjust: ${props => props.colorAdjust};
    -webkit-color-correction: ${props => props.webkitColorCorrection};
    color-interpolation: ${props => props.colorInterpolation};
    color-interpolation-filters: ${props => props.colorInterpolationFilters};
    color-profile: ${props => props.colorProfile};
    color-rendering: ${props => props.colorRendering};
    -webkit-column-axis: ${props => props.webkitColumnAxis};
    -webkit-column-break-after: ${props => props.webkitColumnBreakAfter};
    -webkit-column-break-before: ${props => props.webkitColumnBreakBefore};
    -webkit-column-break-inside: ${props => props.webkitColumnBreakInside};
    column-count: ${props => props.columnCount};
    -moz-column-count: ${props => props.mozColumnCount};
    -webkit-column-count: ${props => props.webkitColumnCount};
    column-fill: ${props => props.columnFill};
    -moz-column-fill: ${props => props.mozColumnFill};
    -webkit-column-fill: ${props => props.webkitColumnFill};
    column-gap: ${props => props.columnGap};
    -moz-column-gap: ${props => props.mozColumnGap};
    -webkit-column-gap: ${props => props.webkitColumnGap};
    column-progression: ${props => props.columnProgression};
    -webkit-column-progression: ${props => props.webkitColumnProgression};
    column-rule: ${props => props.columnRule};
    column-rule-color: ${props => props.columnRuleColor};
    -moz-column-rule-color: ${props => props.mozColumnRuleColor};
    -webkit-column-rule-color: ${props => props.webkitColumnRuleColor};
    -moz-column-rule: ${props => props.mozColumnRule};
    column-rule-style: ${props => props.columnRuleStyle};
    -moz-column-rule-style: ${props => props.mozColumnRuleStyle};
    -webkit-column-rule-style: ${props => props.webkitColumnRuleStyle};
    -webkit-column-rule: ${props => props.webkitColumnRule};
    column-rule-width: ${props => props.columnRuleWidth};
    -moz-column-rule-width: ${props => props.mozColumnRuleWidth};
    -webkit-column-rule-width: ${props => props.webkitColumnRuleWidth};
    column-span: ${props => props.columnSpan};
    -webkit-column-span: ${props => props.webkitColumnSpan};
    column-width: ${props => props.columnWidth};
    -moz-column-width: ${props => props.mozColumnWidth};
    -webkit-column-width: ${props => props.webkitColumnWidth};
    columns: ${props => props.columns};
    -moz-columns: ${props => props.mozColumns};
    -webkit-columns: ${props => props.webkitColumns};
    -webkit-composition-fill-color: ${props => props.webkitCompositionFillColor};
    -webkit-composition-frame-color: ${props => props.webkitCompositionFrameColor};
    contain: ${props => props.contain};
    content: ${props => props.content};
    -ms-content-zoom-chaining: ${props => props.msContentZoomChaining};
    -ms-content-zoom-limit-max: ${props => props.msContentZoomLimitMax};
    -ms-content-zoom-limit-min: ${props => props.msContentZoomLimitMin};
    -ms-content-zoom-limit: ${props => props.msContentZoomLimit};
    -ms-content-zoom-snap: ${props => props.msContentZoomSnap};
    -ms-content-zoom-snap-points: ${props => props.msContentZoomSnapPoints};
    -ms-content-zoom-snap-type: ${props => props.msContentZoomSnapType};
    -ms-content-zooming: ${props => props.msContentZooming};
    continue: ${props => props.continue};
    counter-increment: ${props => props.counterIncrement};
    counter-reset: ${props => props.counterReset};
    counter-set: ${props => props.counterSet};
    cue: ${props => props.cue};
    cue-after: ${props => props.cueAfter};
    cue-before: ${props => props.cueBefore};
    cursor: ${props => props.cursor};
    -webkit-cursor-visibility: ${props => props.webkitCursorVisibility};
    cx: ${props => props.cx};
    cy: ${props => props.cy};
    d: ${props => props.d};
    -apple-dashboard-region: ${props => props.appleDashboardRegion};
    -webkit-dashboard-region: ${props => props.webkitDashboardRegion};
    direction: ${props => props.direction};
    display: ${props => props.display};
    display-align: ${props => props.displayAlign};
    dominant-baseline: ${props => props.dominantBaseline};
    elevation: ${props => props.elevation};
    empty-cells: ${props => props.emptyCells};
    enable-background: ${props => props.enableBackground};
    fill: ${props => props.fill};
    fill-break: ${props => props.fillBreak};
    fill-color: ${props => props.fillColor};
    fill-image: ${props => props.fillImage};
    fill-opacity: ${props => props.fillOpacity};
    fill-origin: ${props => props.fillOrigin};
    fill-position: ${props => props.fillPosition};
    fill-repeat: ${props => props.fillRepeat};
    fill-rule: ${props => props.fillRule};
    fill-size: ${props => props.fillSize};
    filter: ${props => props.filter};
    -ms-filter: ${props => props.msFilter};
    -webkit-filter: ${props => props.webkitFilter};
    flex: ${props => props.flex};
    -ms-flex-align: ${props => props.msFlexAlign};
    -webkit-flex-align: ${props => props.webkitFlexAlign};
    flex-basis: ${props => props.flexBasis};
    -webkit-flex-basis: ${props => props.webkitFlexBasis};
    flex-direction: ${props => props.flexDirection};
    -ms-flex-direction: ${props => props.msFlexDirection};
    -webkit-flex-direction: ${props => props.webkitFlexDirection};
    flex-flow: ${props => props.flexFlow};
    -ms-flex-flow: ${props => props.msFlexFlow};
    -webkit-flex-flow: ${props => props.webkitFlexFlow};
    flex-grow: ${props => props.flexGrow};
    -webkit-flex-grow: ${props => props.webkitFlexGrow};
    -ms-flex-item-align: ${props => props.msFlexItemAlign};
    -webkit-flex-item-align: ${props => props.webkitFlexItemAlign};
    -ms-flex-line-pack: ${props => props.msFlexLinePack};
    -webkit-flex-line-pack: ${props => props.webkitFlexLinePack};
    -ms-flex: ${props => props.msFlex};
    -ms-flex-negative: ${props => props.msFlexNegative};
    -ms-flex-order: ${props => props.msFlexOrder};
    -webkit-flex-order: ${props => props.webkitFlexOrder};
    -ms-flex-pack: ${props => props.msFlexPack};
    -webkit-flex-pack: ${props => props.webkitFlexPack};
    -ms-flex-positive: ${props => props.msFlexPositive};
    -ms-flex-preferred-size: ${props => props.msFlexPreferredSize};
    flex-shrink: ${props => props.flexShrink};
    -webkit-flex-shrink: ${props => props.webkitFlexShrink};
    -webkit-flex: ${props => props.webkitFlex};
    flex-wrap: ${props => props.flexWrap};
    -ms-flex-wrap: ${props => props.msFlexWrap};
    -webkit-flex-wrap: ${props => props.webkitFlexWrap};
    float: ${props => props.float};
    float-defer: ${props => props.floatDefer};
    -moz-float-edge: ${props => props.mozFloatEdge};
    float-offset: ${props => props.floatOffset};
    float-reference: ${props => props.floatReference};
    flood-color: ${props => props.floodColor};
    flood-opacity: ${props => props.floodOpacity};
    flow: ${props => props.flow};
    flow-from: ${props => props.flowFrom};
    -ms-flow-from: ${props => props.msFlowFrom};
    -webkit-flow-from: ${props => props.webkitFlowFrom};
    flow-into: ${props => props.flowInto};
    -ms-flow-into: ${props => props.msFlowInto};
    -webkit-flow-into: ${props => props.webkitFlowInto};
    font: ${props => props.font};
    font-display: ${props => props.fontDisplay};
    font-family: ${props => props.fontFamily};
    font-feature-settings: ${props => props.fontFeatureSettings};
    -moz-font-feature-settings: ${props => props.mozFontFeatureSettings};
    -ms-font-feature-settings: ${props => props.msFontFeatureSettings};
    -webkit-font-feature-settings: ${props => props.webkitFontFeatureSettings};
    font-kerning: ${props => props.fontKerning};
    -webkit-font-kerning: ${props => props.webkitFontKerning};
    font-language-override: ${props => props.fontLanguageOverride};
    -moz-font-language-override: ${props => props.mozFontLanguageOverride};
    font-max-size: ${props => props.fontMaxSize};
    font-min-size: ${props => props.fontMinSize};
    font-optical-sizing: ${props => props.fontOpticalSizing};
    font-palette: ${props => props.fontPalette};
    font-presentation: ${props => props.fontPresentation};
    font-size: ${props => props.fontSize};
    font-size-adjust: ${props => props.fontSizeAdjust};
    -webkit-font-size-delta: ${props => props.webkitFontSizeDelta};
    -webkit-font-smoothing: ${props => props.webkitFontSmoothing};
    font-stretch: ${props => props.fontStretch};
    font-style: ${props => props.fontStyle};
    font-synthesis: ${props => props.fontSynthesis};
    font-variant: ${props => props.fontVariant};
    font-variant-alternates: ${props => props.fontVariantAlternates};
    font-variant-caps: ${props => props.fontVariantCaps};
    font-variant-east-asian: ${props => props.fontVariantEastAsian};
    font-variant-ligatures: ${props => props.fontVariantLigatures};
    -webkit-font-variant-ligatures: ${props => props.webkitFontVariantLigatures};
    font-variant-numeric: ${props => props.fontVariantNumeric};
    font-variant-position: ${props => props.fontVariantPosition};
    font-variation-settings: ${props => props.fontVariationSettings};
    font-weight: ${props => props.fontWeight};
    footnote-display: ${props => props.footnoteDisplay};
    footnote-policy: ${props => props.footnotePolicy};
    -moz-force-broken-image-icon: ${props => props.mozForceBrokenImageIcon};
    gap: ${props => props.gap};
    glyph-orientation-horizontal: ${props => props.glyphOrientationHorizontal};
    glyph-orientation-vertical: ${props => props.glyphOrientationVertical};
    grid: ${props => props.grid};
    -webkit-grid-after: ${props => props.webkitGridAfter};
    grid-area: ${props => props.gridArea};
    grid-auto-columns: ${props => props.gridAutoColumns};
    -webkit-grid-auto-columns: ${props => props.webkitGridAutoColumns};
    grid-auto-flow: ${props => props.gridAutoFlow};
    -webkit-grid-auto-flow: ${props => props.webkitGridAutoFlow};
    grid-auto-rows: ${props => props.gridAutoRows};
    -webkit-grid-auto-rows: ${props => props.webkitGridAutoRows};
    -webkit-grid-before: ${props => props.webkitGridBefore};
    grid-column: ${props => props.gridColumn};
    -ms-grid-column-align: ${props => props.msGridColumnAlign};
    grid-column-end: ${props => props.gridColumnEnd};
    grid-column-gap: ${props => props.gridColumnGap};
    -ms-grid-column: ${props => props.msGridColumn};
    -ms-grid-column-span: ${props => props.msGridColumnSpan};
    grid-column-start: ${props => props.gridColumnStart};
    -webkit-grid-column: ${props => props.webkitGridColumn};
    -ms-grid-columns: ${props => props.msGridColumns};
    -webkit-grid-columns: ${props => props.webkitGridColumns};
    -webkit-grid-end: ${props => props.webkitGridEnd};
    grid-gap: ${props => props.gridGap};
    grid-row: ${props => props.gridRow};
    -ms-grid-row-align: ${props => props.msGridRowAlign};
    grid-row-end: ${props => props.gridRowEnd};
    grid-row-gap: ${props => props.gridRowGap};
    -ms-grid-row: ${props => props.msGridRow};
    -ms-grid-row-span: ${props => props.msGridRowSpan};
    grid-row-start: ${props => props.gridRowStart};
    -webkit-grid-row: ${props => props.webkitGridRow};
    -ms-grid-rows: ${props => props.msGridRows};
    -webkit-grid-rows: ${props => props.webkitGridRows};
    -webkit-grid-start: ${props => props.webkitGridStart};
    grid-template: ${props => props.gridTemplate};
    grid-template-areas: ${props => props.gridTemplateAreas};
    grid-template-columns: ${props => props.gridTemplateColumns};
    grid-template-rows: ${props => props.gridTemplateRows};
    hanging-punctuation: ${props => props.hangingPunctuation};
    height: ${props => props.height};
    -ms-high-contrast-adjust: ${props => props.msHighContrastAdjust};
    -webkit-highlight: ${props => props.webkitHighlight};
    hyphenate-character: ${props => props.hyphenateCharacter};
    -webkit-hyphenate-character: ${props => props.webkitHyphenateCharacter};
    -webkit-hyphenate-limit-after: ${props => props.webkitHyphenateLimitAfter};
    -webkit-hyphenate-limit-before: ${props => props.webkitHyphenateLimitBefore};
    hyphenate-limit-chars: ${props => props.hyphenateLimitChars};
    -ms-hyphenate-limit-chars: ${props => props.msHyphenateLimitChars};
    hyphenate-limit-last: ${props => props.hyphenateLimitLast};
    hyphenate-limit-lines: ${props => props.hyphenateLimitLines};
    -ms-hyphenate-limit-lines: ${props => props.msHyphenateLimitLines};
    -webkit-hyphenate-limit-lines: ${props => props.webkitHyphenateLimitLines};
    hyphenate-limit-zone: ${props => props.hyphenateLimitZone};
    -ms-hyphenate-limit-zone: ${props => props.msHyphenateLimitZone};
    hyphens: ${props => props.hyphens};
    -moz-hyphens: ${props => props.mozHyphens};
    -ms-hyphens: ${props => props.msHyphens};
    -webkit-hyphens: ${props => props.webkitHyphens};
    image-orientation: ${props => props.imageOrientation};
    -moz-image-region: ${props => props.mozImageRegion};
    image-rendering: ${props => props.imageRendering};
    image-resolution: ${props => props.imageResolution};
    -ms-ime-align: ${props => props.msImeAlign};
    ime-mode: ${props => props.imeMode};
    initial-letter: ${props => props.initialLetter};
    initial-letter-align: ${props => props.initialLetterAlign};
    -webkit-initial-letter: ${props => props.webkitInitialLetter};
    initial-letter-wrap: ${props => props.initialLetterWrap};
    inline-size: ${props => props.inlineSize};
    input-format: ${props => props.inputFormat};
    -wap-input-format: ${props => props.wapInputFormat};
    -wap-input-required: ${props => props.wapInputRequired};
    inset: ${props => props.inset};
    inset-block: ${props => props.insetBlock};
    inset-block-end: ${props => props.insetBlockEnd};
    inset-block-start: ${props => props.insetBlockStart};
    inset-inline: ${props => props.insetInline};
    inset-inline-end: ${props => props.insetInlineEnd};
    inset-inline-start: ${props => props.insetInlineStart};
    -ms-interpolation-mode: ${props => props.msInterpolationMode};
    isolation: ${props => props.isolation};
    justify-content: ${props => props.justifyContent};
    -webkit-justify-content: ${props => props.webkitJustifyContent};
    justify-items: ${props => props.justifyItems};
    justify-self: ${props => props.justifySelf};
    -webkit-justify-self: ${props => props.webkitJustifySelf};
    kerning: ${props => props.kerning};
    layout-flow: ${props => props.layoutFlow};
    layout-grid: ${props => props.layoutGrid};
    layout-grid-char: ${props => props.layoutGridChar};
    layout-grid-line: ${props => props.layoutGridLine};
    layout-grid-mode: ${props => props.layoutGridMode};
    layout-grid-type: ${props => props.layoutGridType};
    left: ${props => props.left};
    letter-spacing: ${props => props.letterSpacing};
    lighting-color: ${props => props.lightingColor};
    -webkit-line-align: ${props => props.webkitLineAlign};
    -webkit-line-box-contain: ${props => props.webkitLineBoxContain};
    line-break: ${props => props.lineBreak};
    -webkit-line-break: ${props => props.webkitLineBreak};
    -webkit-line-clamp: ${props => props.webkitLineClamp};
    line-grid: ${props => props.lineGrid};
    -webkit-line-grid-snap: ${props => props.webkitLineGridSnap};
    -webkit-line-grid: ${props => props.webkitLineGrid};
    line-height: ${props => props.lineHeight};
    line-height-step: ${props => props.lineHeightStep};
    line-increment: ${props => props.lineIncrement};
    line-snap: ${props => props.lineSnap};
    -webkit-line-snap: ${props => props.webkitLineSnap};
    -o-link: ${props => props.oLink};
    -o-link-source: ${props => props.oLinkSource};
    list-style: ${props => props.listStyle};
    list-style-image: ${props => props.listStyleImage};
    list-style-position: ${props => props.listStylePosition};
    list-style-type: ${props => props.listStyleType};
    -webkit-locale: ${props => props.webkitLocale};
    -webkit-logical-height: ${props => props.webkitLogicalHeight};
    -webkit-logical-width: ${props => props.webkitLogicalWidth};
    margin: ${props => props.margin};
    -webkit-margin-after-collapse: ${props => props.webkitMarginAfterCollapse};
    -webkit-margin-after: ${props => props.webkitMarginAfter};
    -webkit-margin-before-collapse: ${props => props.webkitMarginBeforeCollapse};
    -webkit-margin-before: ${props => props.webkitMarginBefore};
    margin-block: ${props => props.marginBlock};
    margin-block-end: ${props => props.marginBlockEnd};
    margin-block-start: ${props => props.marginBlockStart};
    margin-bottom: ${props => props.marginBottom};
    -webkit-margin-bottom-collapse: ${props => props.webkitMarginBottomCollapse};
    -webkit-margin-collapse: ${props => props.webkitMarginCollapse};
    -moz-margin-end: ${props => props.mozMarginEnd};
    -webkit-margin-end: ${props => props.webkitMarginEnd};
    margin-inline: ${props => props.marginInline};
    margin-inline-end: ${props => props.marginInlineEnd};
    margin-inline-start: ${props => props.marginInlineStart};
    margin-left: ${props => props.marginLeft};
    margin-right: ${props => props.marginRight};
    -moz-margin-start: ${props => props.mozMarginStart};
    -webkit-margin-start: ${props => props.webkitMarginStart};
    margin-top: ${props => props.marginTop};
    -webkit-margin-top-collapse: ${props => props.webkitMarginTopCollapse};
    marker: ${props => props.marker};
    marker-end: ${props => props.markerEnd};
    marker-knockout-left: ${props => props.markerKnockoutLeft};
    marker-knockout-right: ${props => props.markerKnockoutRight};
    marker-mid: ${props => props.markerMid};
    marker-offset: ${props => props.markerOffset};
    marker-pattern: ${props => props.markerPattern};
    marker-segment: ${props => props.markerSegment};
    marker-side: ${props => props.markerSide};
    marker-start: ${props => props.markerStart};
    marks: ${props => props.marks};
    -wap-marquee-dir: ${props => props.wapMarqueeDir};
    marquee-direction: ${props => props.marqueeDirection};
    -webkit-marquee-direction: ${props => props.webkitMarqueeDirection};
    -webkit-marquee-increment: ${props => props.webkitMarqueeIncrement};
    marquee-loop: ${props => props.marqueeLoop};
    -wap-marquee-loop: ${props => props.wapMarqueeLoop};
    -webkit-marquee-repetition: ${props => props.webkitMarqueeRepetition};
    marquee-speed: ${props => props.marqueeSpeed};
    -wap-marquee-speed: ${props => props.wapMarqueeSpeed};
    -webkit-marquee-speed: ${props => props.webkitMarqueeSpeed};
    marquee-style: ${props => props.marqueeStyle};
    -wap-marquee-style: ${props => props.wapMarqueeStyle};
    -webkit-marquee-style: ${props => props.webkitMarqueeStyle};
    -webkit-marquee: ${props => props.webkitMarquee};
    mask: ${props => props.mask};
    -webkit-mask-attachment: ${props => props.webkitMaskAttachment};
    mask-border: ${props => props.maskBorder};
    mask-border-mode: ${props => props.maskBorderMode};
    mask-border-outset: ${props => props.maskBorderOutset};
    mask-border-repeat: ${props => props.maskBorderRepeat};
    mask-border-slice: ${props => props.maskBorderSlice};
    mask-border-source: ${props => props.maskBorderSource};
    mask-border-width: ${props => props.maskBorderWidth};
    -webkit-mask-box-image-outset: ${props => props.webkitMaskBoxImageOutset};
    -webkit-mask-box-image-repeat: ${props => props.webkitMaskBoxImageRepeat};
    -webkit-mask-box-image-slice: ${props => props.webkitMaskBoxImageSlice};
    -webkit-mask-box-image-source: ${props => props.webkitMaskBoxImageSource};
    -webkit-mask-box-image: ${props => props.webkitMaskBoxImage};
    -webkit-mask-box-image-width: ${props => props.webkitMaskBoxImageWidth};
    mask-clip: ${props => props.maskClip};
    -webkit-mask-clip: ${props => props.webkitMaskClip};
    mask-composite: ${props => props.maskComposite};
    -webkit-mask-composite: ${props => props.webkitMaskComposite};
    mask-image: ${props => props.maskImage};
    -webkit-mask-image: ${props => props.webkitMaskImage};
    mask-mode: ${props => props.maskMode};
    mask-origin: ${props => props.maskOrigin};
    -webkit-mask-origin: ${props => props.webkitMaskOrigin};
    mask-position: ${props => props.maskPosition};
    -webkit-mask-position: ${props => props.webkitMaskPosition};
    mask-position-x: ${props => props.maskPositionX};
    -webkit-mask-position-x: ${props => props.webkitMaskPositionX};
    mask-position-y: ${props => props.maskPositionY};
    -webkit-mask-position-y: ${props => props.webkitMaskPositionY};
    mask-repeat: ${props => props.maskRepeat};
    -webkit-mask-repeat: ${props => props.webkitMaskRepeat};
    -webkit-mask-repeat-x: ${props => props.webkitMaskRepeatX};
    -webkit-mask-repeat-y: ${props => props.webkitMaskRepeatY};
    mask-size: ${props => props.maskSize};
    -webkit-mask-size: ${props => props.webkitMaskSize};
    mask-source-type: ${props => props.maskSourceType};
    -webkit-mask-source-type: ${props => props.webkitMaskSourceType};
    mask-type: ${props => props.maskType};
    -webkit-mask: ${props => props.webkitMask};
    -webkit-match-nearest-mail-blockquote-color: ${props => props.webkitMatchNearestMailBlockquoteColor};
    max-block-size: ${props => props.maxBlockSize};
    max-height: ${props => props.maxHeight};
    max-inline-size: ${props => props.maxInlineSize};
    max-lines: ${props => props.maxLines};
    -webkit-max-logical-height: ${props => props.webkitMaxLogicalHeight};
    -webkit-max-logical-width: ${props => props.webkitMaxLogicalWidth};
    max-width: ${props => props.maxWidth};
    max-zoom: ${props => props.maxZoom};
    min-block-size: ${props => props.minBlockSize};
    min-height: ${props => props.minHeight};
    min-inline-size: ${props => props.minInlineSize};
    -webkit-min-logical-height: ${props => props.webkitMinLogicalHeight};
    -webkit-min-logical-width: ${props => props.webkitMinLogicalWidth};
    min-width: ${props => props.minWidth};
    min-zoom: ${props => props.minZoom};
    mix-blend-mode: ${props => props.mixBlendMode};
    motion: ${props => props.motion};
    motion-offset: ${props => props.motionOffset};
    motion-path: ${props => props.motionPath};
    motion-rotation: ${props => props.motionRotation};
    nav-down: ${props => props.navDown};
    nav-index: ${props => props.navIndex};
    nav-left: ${props => props.navLeft};
    nav-right: ${props => props.navRight};
    nav-up: ${props => props.navUp};
    -webkit-nbsp-mode: ${props => props.webkitNbspMode};
    object-fit: ${props => props.objectFit};
    -o-object-fit: ${props => props.oObjectFit};
    object-position: ${props => props.objectPosition};
    -o-object-position: ${props => props.oObjectPosition};
    offset: ${props => props.offset};
    offset-after: ${props => props.offsetAfter};
    offset-anchor: ${props => props.offsetAnchor};
    offset-before: ${props => props.offsetBefore};
    offset-block-end: ${props => props.offsetBlockEnd};
    offset-block-start: ${props => props.offsetBlockStart};
    offset-distance: ${props => props.offsetDistance};
    offset-end: ${props => props.offsetEnd};
    offset-inline-end: ${props => props.offsetInlineEnd};
    offset-inline-start: ${props => props.offsetInlineStart};
    offset-path: ${props => props.offsetPath};
    offset-position: ${props => props.offsetPosition};
    offset-rotate: ${props => props.offsetRotate};
    offset-rotation: ${props => props.offsetRotation};
    offset-start: ${props => props.offsetStart};
    opacity: ${props => props.opacity};
    -moz-opacity: ${props => props.mozOpacity};
    order: ${props => props.order};
    -webkit-order: ${props => props.webkitOrder};
    -moz-orient: ${props => props.mozOrient};
    orientation: ${props => props.orientation};
    orphans: ${props => props.orphans};
    -moz-osx-font-smoothing: ${props => props.mozOsxFontSmoothing};
    outline: ${props => props.outline};
    outline-color: ${props => props.outlineColor};
    -moz-outline-color: ${props => props.mozOutlineColor};
    -moz-outline: ${props => props.mozOutline};
    outline-offset: ${props => props.outlineOffset};
    -moz-outline-offset: ${props => props.mozOutlineOffset};
    -moz-outline-radius-bottomleft: ${props => props.mozOutlineRadiusBottomleft};
    -moz-outline-radius-bottomright: ${props => props.mozOutlineRadiusBottomright};
    -moz-outline-radius: ${props => props.mozOutlineRadius};
    -moz-outline-radius-topleft: ${props => props.mozOutlineRadiusTopleft};
    -moz-outline-radius-topright: ${props => props.mozOutlineRadiusTopright};
    outline-style: ${props => props.outlineStyle};
    -moz-outline-style: ${props => props.mozOutlineStyle};
    outline-width: ${props => props.outlineWidth};
    -moz-outline-width: ${props => props.mozOutlineWidth};
    overflow: ${props => props.overflow};
    overflow-anchor: ${props => props.overflowAnchor};
    -webkit-overflow-scrolling: ${props => props.webkitOverflowScrolling};
    overflow-style: ${props => props.overflowStyle};
    -ms-overflow-style: ${props => props.msOverflowStyle};
    overflow-wrap: ${props => props.overflowWrap};
    overflow-x: ${props => props.overflowX};
    overflow-y: ${props => props.overflowY};
    overscroll-behavior: ${props => props.overscrollBehavior};
    overscroll-behavior-x: ${props => props.overscrollBehaviorX};
    overscroll-behavior-y: ${props => props.overscrollBehaviorY};
    padding: ${props => props.padding};
    -webkit-padding-after: ${props => props.webkitPaddingAfter};
    -webkit-padding-before: ${props => props.webkitPaddingBefore};
    padding-block: ${props => props.paddingBlock};
    padding-block-end: ${props => props.paddingBlockEnd};
    padding-block-start: ${props => props.paddingBlockStart};
    padding-bottom: ${props => props.paddingBottom};
    -moz-padding-end: ${props => props.mozPaddingEnd};
    -webkit-padding-end: ${props => props.webkitPaddingEnd};
    padding-inline: ${props => props.paddingInline};
    padding-inline-end: ${props => props.paddingInlineEnd};
    padding-inline-start: ${props => props.paddingInlineStart};
    padding-left: ${props => props.paddingLeft};
    padding-right: ${props => props.paddingRight};
    -moz-padding-start: ${props => props.mozPaddingStart};
    -webkit-padding-start: ${props => props.webkitPaddingStart};
    padding-top: ${props => props.paddingTop};
    page: ${props => props.page};
    page-break-after: ${props => props.pageBreakAfter};
    page-break-before: ${props => props.pageBreakBefore};
    page-break-inside: ${props => props.pageBreakInside};
    paint-order: ${props => props.paintOrder};
    pause: ${props => props.pause};
    pause-after: ${props => props.pauseAfter};
    pause-before: ${props => props.pauseBefore};
    pen-action: ${props => props.penAction};
    perspective: ${props => props.perspective};
    -moz-perspective: ${props => props.mozPerspective};
    -ms-perspective: ${props => props.msPerspective};
    perspective-origin: ${props => props.perspectiveOrigin};
    -moz-perspective-origin: ${props => props.mozPerspectiveOrigin};
    -ms-perspective-origin: ${props => props.msPerspectiveOrigin};
    -webkit-perspective-origin: ${props => props.webkitPerspectiveOrigin};
    perspective-origin-x: ${props => props.perspectiveOriginX};
    -webkit-perspective-origin-x: ${props => props.webkitPerspectiveOriginX};
    perspective-origin-y: ${props => props.perspectiveOriginY};
    -webkit-perspective-origin-y: ${props => props.webkitPerspectiveOriginY};
    -webkit-perspective: ${props => props.webkitPerspective};
    pitch: ${props => props.pitch};
    pitch-range: ${props => props.pitchRange};
    place-content: ${props => props.placeContent};
    place-items: ${props => props.placeItems};
    place-self: ${props => props.placeSelf};
    play-during: ${props => props.playDuring};
    pointer-events: ${props => props.pointerEvents};
    position: ${props => props.position};
    -webkit-print-color-adjust: ${props => props.webkitPrintColorAdjust};
    quotes: ${props => props.quotes};
    r: ${props => props.r};
    -webkit-region-break-after: ${props => props.webkitRegionBreakAfter};
    -webkit-region-break-before: ${props => props.webkitRegionBreakBefore};
    -webkit-region-break-inside: ${props => props.webkitRegionBreakInside};
    region-fragment: ${props => props.regionFragment};
    -webkit-region-fragment: ${props => props.webkitRegionFragment};
    -webkit-region-overflow: ${props => props.webkitRegionOverflow};
    resize: ${props => props.resize};
    rest: ${props => props.rest};
    rest-after: ${props => props.restAfter};
    rest-before: ${props => props.restBefore};
    richness: ${props => props.richness};
    right: ${props => props.right};
    rotate: ${props => props.rotate};
    rotation: ${props => props.rotation};
    rotation-point: ${props => props.rotationPoint};
    row-gap: ${props => props.rowGap};
    -webkit-rtl-ordering: ${props => props.webkitRtlOrdering};
    ruby-align: ${props => props.rubyAlign};
    ruby-merge: ${props => props.rubyMerge};
    ruby-overhang: ${props => props.rubyOverhang};
    ruby-position: ${props => props.rubyPosition};
    -webkit-ruby-position: ${props => props.webkitRubyPosition};
    running: ${props => props.running};
    rx: ${props => props.rx};
    ry: ${props => props.ry};
    scale: ${props => props.scale};
    scroll-behavior: ${props => props.scrollBehavior};
    -ms-scroll-chaining: ${props => props.msScrollChaining};
    -ms-scroll-limit: ${props => props.msScrollLimit};
    -ms-scroll-limit-x-max: ${props => props.msScrollLimitXMax};
    -ms-scroll-limit-x-min: ${props => props.msScrollLimitXMin};
    -ms-scroll-limit-y-max: ${props => props.msScrollLimitYMax};
    -ms-scroll-limit-y-min: ${props => props.msScrollLimitYMin};
    scroll-padding: ${props => props.scrollPadding};
    scroll-padding-block: ${props => props.scrollPaddingBlock};
    scroll-padding-block-end: ${props => props.scrollPaddingBlockEnd};
    scroll-padding-block-start: ${props => props.scrollPaddingBlockStart};
    scroll-padding-bottom: ${props => props.scrollPaddingBottom};
    scroll-padding-inline: ${props => props.scrollPaddingInline};
    scroll-padding-inline-end: ${props => props.scrollPaddingInlineEnd};
    scroll-padding-inline-start: ${props => props.scrollPaddingInlineStart};
    scroll-padding-left: ${props => props.scrollPaddingLeft};
    scroll-padding-right: ${props => props.scrollPaddingRight};
    scroll-padding-top: ${props => props.scrollPaddingTop};
    -ms-scroll-rails: ${props => props.msScrollRails};
    scroll-snap-align: ${props => props.scrollSnapAlign};
    scroll-snap-coordinate: ${props => props.scrollSnapCoordinate};
    -webkit-scroll-snap-coordinate: ${props => props.webkitScrollSnapCoordinate};
    scroll-snap-destination: ${props => props.scrollSnapDestination};
    -webkit-scroll-snap-destination: ${props => props.webkitScrollSnapDestination};
    scroll-snap-margin: ${props => props.scrollSnapMargin};
    scroll-snap-margin-block: ${props => props.scrollSnapMarginBlock};
    scroll-snap-margin-block-end: ${props => props.scrollSnapMarginBlockEnd};
    scroll-snap-margin-block-start: ${props => props.scrollSnapMarginBlockStart};
    scroll-snap-margin-bottom: ${props => props.scrollSnapMarginBottom};
    scroll-snap-margin-inline: ${props => props.scrollSnapMarginInline};
    scroll-snap-margin-inline-end: ${props => props.scrollSnapMarginInlineEnd};
    scroll-snap-margin-inline-start: ${props => props.scrollSnapMarginInlineStart};
    scroll-snap-margin-left: ${props => props.scrollSnapMarginLeft};
    scroll-snap-margin-right: ${props => props.scrollSnapMarginRight};
    scroll-snap-margin-top: ${props => props.scrollSnapMarginTop};
    scroll-snap-points-x: ${props => props.scrollSnapPointsX};
    -ms-scroll-snap-points-x: ${props => props.msScrollSnapPointsX};
    -webkit-scroll-snap-points-x: ${props => props.webkitScrollSnapPointsX};
    scroll-snap-points-y: ${props => props.scrollSnapPointsY};
    -ms-scroll-snap-points-y: ${props => props.msScrollSnapPointsY};
    -webkit-scroll-snap-points-y: ${props => props.webkitScrollSnapPointsY};
    scroll-snap-stop: ${props => props.scrollSnapStop};
    scroll-snap-type: ${props => props.scrollSnapType};
    -ms-scroll-snap-type: ${props => props.msScrollSnapType};
    -webkit-scroll-snap-type: ${props => props.webkitScrollSnapType};
    scroll-snap-type-x: ${props => props.scrollSnapTypeX};
    scroll-snap-type-y: ${props => props.scrollSnapTypeY};
    -ms-scroll-snap-x: ${props => props.msScrollSnapX};
    -ms-scroll-snap-y: ${props => props.msScrollSnapY};
    -ms-scroll-translation: ${props => props.msScrollTranslation};
    scrollbar-arrow-color: ${props => props.scrollbarArrowColor};
    scrollbar-base-color: ${props => props.scrollbarBaseColor};
    scrollbar-dark-shadow-color: ${props => props.scrollbarDarkShadowColor};
    scrollbar-darkshadow-color: ${props => props.scrollbarDarkshadowColor};
    scrollbar-face-color: ${props => props.scrollbarFaceColor};
    scrollbar-gutter: ${props => props.scrollbarGutter};
    scrollbar-highlight-color: ${props => props.scrollbarHighlightColor};
    scrollbar-shadow-color: ${props => props.scrollbarShadowColor};
    scrollbar-track-color: ${props => props.scrollbarTrackColor};
    scrollbar3d-light-color: ${props => props.scrollbar3dLightColor};
    scrollbar3dlight-color: ${props => props.scrollbar3dlightColor};
    shape-image-threshold: ${props => props.shapeImageThreshold};
    -webkit-shape-image-threshold: ${props => props.webkitShapeImageThreshold};
    shape-inside: ${props => props.shapeInside};
    -webkit-shape-inside: ${props => props.webkitShapeInside};
    shape-margin: ${props => props.shapeMargin};
    -webkit-shape-margin: ${props => props.webkitShapeMargin};
    shape-outside: ${props => props.shapeOutside};
    -webkit-shape-outside: ${props => props.webkitShapeOutside};
    -webkit-shape-padding: ${props => props.webkitShapePadding};
    shape-rendering: ${props => props.shapeRendering};
    size: ${props => props.size};
    snap-height: ${props => props.snapHeight};
    solid-color: ${props => props.solidColor};
    solid-opacity: ${props => props.solidOpacity};
    speak: ${props => props.speak};
    speak-as: ${props => props.speakAs};
    speak-header: ${props => props.speakHeader};
    speak-numeral: ${props => props.speakNumeral};
    speak-punctuation: ${props => props.speakPunctuation};
    speech-rate: ${props => props.speechRate};
    src: ${props => props.src};
    -moz-stack-sizing: ${props => props.mozStackSizing};
    stop-color: ${props => props.stopColor};
    stop-opacity: ${props => props.stopOpacity};
    stress: ${props => props.stress};
    string-set: ${props => props.stringSet};
    stroke: ${props => props.stroke};
    stroke-align: ${props => props.strokeAlign};
    stroke-alignment: ${props => props.strokeAlignment};
    stroke-break: ${props => props.strokeBreak};
    stroke-color: ${props => props.strokeColor};
    stroke-dash-corner: ${props => props.strokeDashCorner};
    stroke-dash-justify: ${props => props.strokeDashJustify};
    stroke-dashadjust: ${props => props.strokeDashadjust};
    stroke-dasharray: ${props => props.strokeDasharray};
    stroke-dashcorner: ${props => props.strokeDashcorner};
    stroke-dashoffset: ${props => props.strokeDashoffset};
    stroke-image: ${props => props.strokeImage};
    stroke-linecap: ${props => props.strokeLinecap};
    stroke-linejoin: ${props => props.strokeLinejoin};
    stroke-miterlimit: ${props => props.strokeMiterlimit};
    stroke-opacity: ${props => props.strokeOpacity};
    stroke-origin: ${props => props.strokeOrigin};
    stroke-position: ${props => props.strokePosition};
    stroke-repeat: ${props => props.strokeRepeat};
    stroke-size: ${props => props.strokeSize};
    stroke-width: ${props => props.strokeWidth};
    -webkit-svg-shadow: ${props => props.webkitSvgShadow};
    tab-size: ${props => props.tabSize};
    -moz-tab-size: ${props => props.mozTabSize};
    -o-tab-size: ${props => props.oTabSize};
    -o-table-baseline: ${props => props.oTableBaseline};
    table-layout: ${props => props.tableLayout};
    -webkit-tap-highlight-color: ${props => props.webkitTapHighlightColor};
    text-align: ${props => props.textAlign};
    text-align-all: ${props => props.textAlignAll};
    text-align-last: ${props => props.textAlignLast};
    -moz-text-align-last: ${props => props.mozTextAlignLast};
    text-anchor: ${props => props.textAnchor};
    text-autospace: ${props => props.textAutospace};
    -moz-text-blink: ${props => props.mozTextBlink};
    -ms-text-combine-horizontal: ${props => props.msTextCombineHorizontal};
    text-combine-upright: ${props => props.textCombineUpright};
    -webkit-text-combine: ${props => props.webkitTextCombine};
    text-decoration: ${props => props.textDecoration};
    text-decoration-blink: ${props => props.textDecorationBlink};
    text-decoration-color: ${props => props.textDecorationColor};
    -moz-text-decoration-color: ${props => props.mozTextDecorationColor};
    -webkit-text-decoration-color: ${props => props.webkitTextDecorationColor};
    text-decoration-line: ${props => props.textDecorationLine};
    -moz-text-decoration-line: ${props => props.mozTextDecorationLine};
    text-decoration-line-through: ${props => props.textDecorationLineThrough};
    -webkit-text-decoration-line: ${props => props.webkitTextDecorationLine};
    text-decoration-none: ${props => props.textDecorationNone};
    text-decoration-overline: ${props => props.textDecorationOverline};
    text-decoration-skip: ${props => props.textDecorationSkip};
    text-decoration-skip-ink: ${props => props.textDecorationSkipInk};
    -webkit-text-decoration-skip: ${props => props.webkitTextDecorationSkip};
    text-decoration-style: ${props => props.textDecorationStyle};
    -moz-text-decoration-style: ${props => props.mozTextDecorationStyle};
    -webkit-text-decoration-style: ${props => props.webkitTextDecorationStyle};
    text-decoration-underline: ${props => props.textDecorationUnderline};
    -webkit-text-decoration: ${props => props.webkitTextDecoration};
    -webkit-text-decorations-in-effect: ${props => props.webkitTextDecorationsInEffect};
    text-emphasis: ${props => props.textEmphasis};
    text-emphasis-color: ${props => props.textEmphasisColor};
    -webkit-text-emphasis-color: ${props => props.webkitTextEmphasisColor};
    text-emphasis-position: ${props => props.textEmphasisPosition};
    -webkit-text-emphasis-position: ${props => props.webkitTextEmphasisPosition};
    text-emphasis-style: ${props => props.textEmphasisStyle};
    -webkit-text-emphasis-style: ${props => props.webkitTextEmphasisStyle};
    -webkit-text-emphasis: ${props => props.webkitTextEmphasis};
    -webkit-text-fill-color: ${props => props.webkitTextFillColor};
    text-indent: ${props => props.textIndent};
    text-justify: ${props => props.textJustify};
    text-justify-trim: ${props => props.textJustifyTrim};
    text-kashida: ${props => props.textKashida};
    text-kashida-space: ${props => props.textKashidaSpace};
    text-line-through: ${props => props.textLineThrough};
    text-line-through-color: ${props => props.textLineThroughColor};
    text-line-through-mode: ${props => props.textLineThroughMode};
    text-line-through-style: ${props => props.textLineThroughStyle};
    text-line-through-width: ${props => props.textLineThroughWidth};
    text-orientation: ${props => props.textOrientation};
    -webkit-text-orientation: ${props => props.webkitTextOrientation};
    text-overflow: ${props => props.textOverflow};
    text-overline: ${props => props.textOverline};
    text-overline-color: ${props => props.textOverlineColor};
    text-overline-mode: ${props => props.textOverlineMode};
    text-overline-style: ${props => props.textOverlineStyle};
    text-overline-width: ${props => props.textOverlineWidth};
    text-rendering: ${props => props.textRendering};
    -webkit-text-security: ${props => props.webkitTextSecurity};
    text-shadow: ${props => props.textShadow};
    text-size-adjust: ${props => props.textSizeAdjust};
    -moz-text-size-adjust: ${props => props.mozTextSizeAdjust};
    -ms-text-size-adjust: ${props => props.msTextSizeAdjust};
    -webkit-text-size-adjust: ${props => props.webkitTextSizeAdjust};
    text-space-collapse: ${props => props.textSpaceCollapse};
    text-space-trim: ${props => props.textSpaceTrim};
    text-spacing: ${props => props.textSpacing};
    -webkit-text-stroke-color: ${props => props.webkitTextStrokeColor};
    -webkit-text-stroke: ${props => props.webkitTextStroke};
    -webkit-text-stroke-width: ${props => props.webkitTextStrokeWidth};
    text-transform: ${props => props.textTransform};
    text-underline: ${props => props.textUnderline};
    text-underline-color: ${props => props.textUnderlineColor};
    text-underline-mode: ${props => props.textUnderlineMode};
    text-underline-position: ${props => props.textUnderlinePosition};
    -webkit-text-underline-position: ${props => props.webkitTextUnderlinePosition};
    text-underline-style: ${props => props.textUnderlineStyle};
    text-underline-width: ${props => props.textUnderlineWidth};
    text-wrap: ${props => props.textWrap};
    -webkit-text-zoom: ${props => props.webkitTextZoom};
    top: ${props => props.top};
    touch-action: ${props => props.touchAction};
    touch-action-delay: ${props => props.touchActionDelay};
    -ms-touch-action: ${props => props.msTouchAction};
    -webkit-touch-callout: ${props => props.webkitTouchCallout};
    -ms-touch-select: ${props => props.msTouchSelect};
    transform: ${props => props.transform};
    transform-box: ${props => props.transformBox};
    -moz-transform: ${props => props.mozTransform};
    -ms-transform: ${props => props.msTransform};
    -o-transform: ${props => props.oTransform};
    transform-origin: ${props => props.transformOrigin};
    -moz-transform-origin: ${props => props.mozTransformOrigin};
    -ms-transform-origin: ${props => props.msTransformOrigin};
    -o-transform-origin: ${props => props.oTransformOrigin};
    -webkit-transform-origin: ${props => props.webkitTransformOrigin};
    transform-origin-x: ${props => props.transformOriginX};
    -webkit-transform-origin-x: ${props => props.webkitTransformOriginX};
    transform-origin-y: ${props => props.transformOriginY};
    -webkit-transform-origin-y: ${props => props.webkitTransformOriginY};
    transform-origin-z: ${props => props.transformOriginZ};
    -webkit-transform-origin-z: ${props => props.webkitTransformOriginZ};
    transform-style: ${props => props.transformStyle};
    -moz-transform-style: ${props => props.mozTransformStyle};
    -ms-transform-style: ${props => props.msTransformStyle};
    -webkit-transform-style: ${props => props.webkitTransformStyle};
    -webkit-transform: ${props => props.webkitTransform};
    transition: ${props => props.transition};
    transition-delay: ${props => props.transitionDelay};
    -moz-transition-delay: ${props => props.mozTransitionDelay};
    -ms-transition-delay: ${props => props.msTransitionDelay};
    -o-transition-delay: ${props => props.oTransitionDelay};
    -webkit-transition-delay: ${props => props.webkitTransitionDelay};
    transition-duration: ${props => props.transitionDuration};
    -moz-transition-duration: ${props => props.mozTransitionDuration};
    -ms-transition-duration: ${props => props.msTransitionDuration};
    -o-transition-duration: ${props => props.oTransitionDuration};
    -webkit-transition-duration: ${props => props.webkitTransitionDuration};
    -moz-transition: ${props => props.mozTransition};
    -ms-transition: ${props => props.msTransition};
    -o-transition: ${props => props.oTransition};
    transition-property: ${props => props.transitionProperty};
    -moz-transition-property: ${props => props.mozTransitionProperty};
    -ms-transition-property: ${props => props.msTransitionProperty};
    -o-transition-property: ${props => props.oTransitionProperty};
    -webkit-transition-property: ${props => props.webkitTransitionProperty};
    transition-timing-function: ${props => props.transitionTimingFunction};
    -moz-transition-timing-function: ${props => props.mozTransitionTimingFunction};
    -ms-transition-timing-function: ${props => props.msTransitionTimingFunction};
    -o-transition-timing-function: ${props => props.oTransitionTimingFunction};
    -webkit-transition-timing-function: ${props => props.webkitTransitionTimingFunction};
    -webkit-transition: ${props => props.webkitTransition};
    translate: ${props => props.translate};
    uc-alt-skin: ${props => props.ucAltSkin};
    uc-skin: ${props => props.ucSkin};
    unicode-bidi: ${props => props.unicodeBidi};
    unicode-range: ${props => props.unicodeRange};
    -webkit-user-drag: ${props => props.webkitUserDrag};
    -moz-user-focus: ${props => props.mozUserFocus};
    -moz-user-input: ${props => props.mozUserInput};
    -moz-user-modify: ${props => props.mozUserModify};
    -webkit-user-modify: ${props => props.webkitUserModify};
    user-select: ${props => props.userSelect};
    -moz-user-select: ${props => props.mozUserSelect};
    -ms-user-select: ${props => props.msUserSelect};
    -webkit-user-select: ${props => props.webkitUserSelect};
    user-zoom: ${props => props.userZoom};
    vector-effect: ${props => props.vectorEffect};
    vertical-align: ${props => props.verticalAlign};
    viewport-fill: ${props => props.viewportFill};
    viewport-fill-opacity: ${props => props.viewportFillOpacity};
    visibility: ${props => props.visibility};
    voice-balance: ${props => props.voiceBalance};
    voice-duration: ${props => props.voiceDuration};
    voice-family: ${props => props.voiceFamily};
    voice-pitch: ${props => props.voicePitch};
    voice-range: ${props => props.voiceRange};
    voice-rate: ${props => props.voiceRate};
    voice-stress: ${props => props.voiceStress};
    voice-volume: ${props => props.voiceVolume};
    volume: ${props => props.volume};
    white-space: ${props => props.whiteSpace};
    -webkit-widget-region: ${props => props.webkitWidgetRegion};
    widows: ${props => props.widows};
    width: ${props => props.width};
    will-change: ${props => props.willChange};
    -moz-window-dragging: ${props => props.mozWindowDragging};
    -moz-window-shadow: ${props => props.mozWindowShadow};
    word-break: ${props => props.wordBreak};
    word-spacing: ${props => props.wordSpacing};
    word-wrap: ${props => props.wordWrap};
    wrap-after: ${props => props.wrapAfter};
    wrap-before: ${props => props.wrapBefore};
    wrap-flow: ${props => props.wrapFlow};
    -ms-wrap-flow: ${props => props.msWrapFlow};
    -webkit-wrap-flow: ${props => props.webkitWrapFlow};
    wrap-inside: ${props => props.wrapInside};
    -ms-wrap-margin: ${props => props.msWrapMargin};
    -webkit-wrap-margin: ${props => props.webkitWrapMargin};
    -webkit-wrap-padding: ${props => props.webkitWrapPadding};
    -webkit-wrap-shape-inside: ${props => props.webkitWrapShapeInside};
    -webkit-wrap-shape-outside: ${props => props.webkitWrapShapeOutside};
    wrap-through: ${props => props.wrapThrough};
    -ms-wrap-through: ${props => props.msWrapThrough};
    -webkit-wrap-through: ${props => props.webkitWrapThrough};
    -webkit-wrap: ${props => props.webkitWrap};
    writing-mode: ${props => props.writingMode};
    -webkit-writing-mode: ${props => props.webkitWritingMode};
    x: ${props => props.x};
    y: ${props => props.y};
    z-index: ${props => props.zIndex};
    zoom: ${props => props.zoom};
`;

console.log(styleProps);

export default styleProps;
